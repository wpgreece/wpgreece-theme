<?php
    /* 
     * Nevma theme framework v1.0.1
     *
     * Copyright (c) 2012 Nevma.Gr
     * http://www.nevma.gr
     *
     * All right reserved!
     *
     */

    /* --------------------------------------------------------------------------------------------- */
    /* ----==== SCRIPTS & STYLES ====---- */ 
    /* --------------------------------------------------------------------------------------------- */

    // Some backend scripts may need to be loaded here for the admins
    // ...

    /* --------------------------------------------------------------------------------------------- */
    /* ----==== SHORTCODES ====---- */
    /* --------------------------------------------------------------------------------------------- */

    /* COLUMNS */

    if ( ! function_exists( 'nevma_columns' ) ) {

        function nevma_columns( $atts, $content = null, $name ){
            return '<div class = "columns clearfix">' . nevma_remove_wpautop( $content ) . '</div>';
        }
    }

    if ( ! function_exists( 'nevma_column' ) ) {

        function nevma_column( $atts, $content = null, $name ){

            $classes = array(
                '1/2' => 'one-half',
                '1/3' => 'one-third',
                '2/3' => 'two-thirds',
                '1/4' => 'one-quarter',
                '2/4' => 'two-quarters',
                '3/4' => 'three-quarters',
                '1/5' => 'one-fifth',
                '2/5' => 'two-fifths',
                '3/5' => 'three-fifths',
                '4/5' => 'four-fifths',
                '1/6' => 'one-sixth',
                '2/6' => 'two-sixths',
                '3/6' => 'three-sixths',
                '4/6' => 'four-sixths',
                '5/6' => 'five-sixths'
            );

            // Size is always the first (and only) attribute
            $size = isset( $atts[0] ) ? $atts[0] : null;

            // Stop if size is null or invalid
            if ( ! $size || ! $classes[$size] ) return;

            return '<div class = "column ' . $classes[$size] . '">' . nevma_remove_wpautop( $content ) . '</div>';
        }
    }

    add_shortcode( 'columns', 'nevma_columns' );
    add_shortcode( 'column', 'nevma_column' );



    /* BUTTONS */

    if ( ! function_exists( 'nevma_buttons' ) ) {

        function nevma_buttons( $atts, $content = null, $name ){
            extract( shortcode_atts( array(
                'color' => 'default',
                'size' 	=> 'normal'
            ), $atts ) );
            $classes = $color . ' ' . $size;
            return '<span class = "button ' . $classes . '">' . nevma_remove_wpautop( $content ) . '</span>';
        }
    }

    add_shortcode( 'button', 'nevma_buttons' );



    /* 
     * ACCORDIONS 
     * Create single-panel (sliding box) or multi-panel accordions with shortcodes.
     * For each panel a "title", a "subtitle" (optional) and "content" can be used.
     */

    if ( ! function_exists( 'nevma_accordion' ) ) {

        function nevma_accordion( $atts, $content = null, $name ){
            return '<div class = "nevma-accordion">' . nevma_remove_wpautop( $content ) . '</div>';
        }
    }

    if ( ! function_exists( 'nevma_accordion_panel' ) ) {

        function nevma_accordion_panel( $atts, $content = null, $name ){
            
            extract( $atts );

            if ( in_array( 'open', $atts ) ){
                $active = ' active';
            } else {
                $active = '';
            }

            $output  = '<div class = "panel-title' . $active . '"><h3>' . $title . '</h3>';

            if ( $subtitle ) $output .= ' <h4>' . $subtitle . '</h4>';

            $output .= '</div>
                        <div class = "panel' . $active . '">' . nevma_remove_wpautop( $content ) . '</div>';
            return $output;
        }
    }

    add_shortcode( 'accordion', 'nevma_accordion' );
    add_shortcode( 'accordion_panel', 'nevma_accordion_panel' );

    /*
        Example:

        [accordion]
            [accordion_panel title = "Στροφή 1" subtitle = "(Όλοι μαζί)"]
                Στη γειτονιά μου την παλιά είχα ένα φίλο που ήξερε και έπαιζε τ' ακορντεόν
            [/accordion_panel]
            [accordion_panel title = "Στροφή 2" subtitle = "(Πιο γρήγορα)"]
                Κι όταν τραγούδαγε φτυστός ήταν ο ήλιος φωτιές στα χέρια τ' άναβε τ' ακορντεόν
            [/accordion_panel]
            [accordion_panel title = "Στροφή 3" subtitle = "(Με ρυθμό)"]
                Λα-λα-λα-λααα
            [/accordion_panel]
        [/accordion]
    */



    /* 
     * SLIDESHOW GALLERIES 
     * Convert WP's default gallery to a Nevma slideshow.
     * Parses WP's gallery shortcode and extracts the slideshow images' id's from there.
     * jquery.nevma.slideshow needs to be enqueued to perform slideshow functions.
     */

    if ( ! function_exists( 'nevma_slideshow' ) ) {

        function nevma_slideshow( $atts, $content = null, $name ){
            extract( shortcode_atts( array(
                'style'	=> 'default'
            ), $atts ) );
            $classes = $style;
            $output = '';
            $slideshow_nav = '';

            //Get image id's from gallery shortcode.
            //eg. [gallery ids="19,47,56,112"]
            //$ids[0] will contain the text that matched the full pattern, i.e: ids="19,47,56,112" 
            //$ids[1] will have the text that matched the first captured parenthesized subpattern, i.e: 19,47,56,112. 
            preg_match( '/ids=\"(.*?)\"/', $content, $ids );

            $image_ids = explode( ',', $ids[1] );

            if ( ! empty( $image_ids ) ) {
                $output .= '<div class = "nevma-slideshow slideshow-gallery">';
                    foreach ( $image_ids as $image_id ) {
                        $output .= '<div class = "slide gallery-image-container">' . wp_get_attachment_image( $image_id, 'medium' ) . '</div>';
                        $slideshow_nav .= '<a>' . get_the_title( $image_id ) . '</a>';
                    }
                    $output .= '<div class = "slideshow-nav">
                                    <a class = "prev">' . __( 'Previous Image', 'nevma-theme' ) . '</a> 
                                    <div class = "slide-control">' . $slideshow_nav . '</div>
                                    <a class = "next">' . __( 'Next Image', 'nevma-theme' ) . '</a>
                                </div><!-- .slideshow-nav -->';
                $output .= '</div><!-- .nevma-slideshow -->';
            }
            return $output;
        }
    }

    add_shortcode( 'slideshow', 'nevma_slideshow' );



    /* 
     * CHAMELEON LISTS
     * Wrap ordinary lists (ul or ol) in a container with a custom class that is entered using the "type" parameter.
     * Some predefined list types may be available.
     */

    if ( ! function_exists( 'nevma_chameleon_list' ) ) {

        function nevma_chameleon_list( $atts, $content = null, $name ){
            extract( shortcode_atts( array(
                'type' => 'default'
            ), $atts ) );

            return '<div class = "nevma-chameleon-list ' . $type . '">' . nevma_remove_wpautop( $content ) . '</div>';
        }
    }

    add_shortcode( 'list', 'nevma_chameleon_list' );



    /* --------------------------------------------------------------------------------------------- */
    /* ----==== HELPER FUNCTIONS ====---- */
    /* --------------------------------------------------------------------------------------------- */

    /* 
     * CUSTOM WP AUTOP
     * Replace WP autop formatting (remove useless p and br tags). 
     * Used in all shortcode functions.
     */

    if ( ! function_exists( 'nevma_remove_wpautop' ) ) {
        function nevma_remove_wpautop( $content ) {
            $content = do_shortcode( shortcode_unautop( $content ) );
            $content = preg_replace( '#^<\/p>|^<br \/>|<p>$#', '', $content );
            return $content;
        }
    }



    /*
     * POPUP
     * Make lovely popups the easy way.
     *
     * Parameters:
     *     header 	(HTML)
     *     content 	(HTML)
     *     footer 	(HTML)
     *     id 		(string)
     *	   class    (string)
     */

    if ( ! function_exists( 'nevma_popup' ) ) {

        function nevma_popup ( $args = array( 'header' => '', 'content' => '', 'footer' => '', 'id' => '', 'class' => '' ) ) {
            
            extract( $args );

            $output .= '<div';
            $output .= $id ? ' id = "' . $id . '"' : ''; 
            $output .= ' class = "nevma-popup-container hidden';
            $output .= $class ? ' ' . $class : '';
            $output .= '">';

                $output .= '<div class = "nevma-popup">';
                    if ( $header ) 	$output .= '<h3 class = "popup-header">' . $header . '</h3>';
                    if ( $content ) $output .= '<div class = "popup-content">' . $content . '</div>';
                    if ( $footer ) 	$output .= '<div class = "popup-footer">' . $footer . '</div>';			    
                $output .= '</div><!-- .nevma-popup -->';
            
            $output .= '</div><!-- .nevma-popup-container -->';
            
            return $output;
        }
    }

?>